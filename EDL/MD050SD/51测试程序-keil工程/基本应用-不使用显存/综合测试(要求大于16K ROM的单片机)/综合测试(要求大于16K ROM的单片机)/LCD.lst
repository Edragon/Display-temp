C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:40:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD.lst) OBJECT(LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <font\font.h>
   4          #include <sys\sys.h>
   5          #include <lcd\lcd.h>
   6          u16 BACK_COLOR, POINT_COLOR;   //背景色，画笔色         
   7           
   8          void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
   9          {
  10   1          LCD_DataPortH=VH;   
  11   1              LCD_DataPortL=VL;               
  12   1              LCD_WR=0;
  13   1              LCD_WR=1; 
  14   1      }
  15          void LCD_WR_DATA8(char VH,char VL) //发送数据-8位参数
  16          {
  17   1          LCD_RS=1;
  18   1              LCD_Writ_Bus(VH,VL);
  19   1      }  
  20           void LCD_WR_DATA(int da)
  21          {
  22   1          LCD_RS=1;
  23   1              LCD_Writ_Bus(da>>8,da);
  24   1      }         
  25          void LCD_WR_REG(int da)  
  26          {       
  27   1          LCD_RS=0;
  28   1              LCD_Writ_Bus(da>>8,da);
  29   1      }
  30          //设置起始地址与结束地址
  31          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
  32          { 
  33   1              LCD_WR_REG(0x02);//开始y
  34   1              LCD_WR_DATA(y1); 
  35   1              LCD_WR_REG(0x03);//开始x
  36   1              LCD_WR_DATA(x1);            
  37   1              LCD_WR_REG(0x06);//结束y
  38   1              LCD_WR_DATA(y2); 
  39   1              LCD_WR_REG(0x07);//结束x
  40   1              LCD_WR_DATA(x2);   
  41   1              LCD_WR_REG(0x0f);                                                                                        
  42   1      }
  43          void Lcd_Init(void)
  44          {
  45   1              LCD_RD=1;
  46   1              LCD_WR=1;
  47   1              LCD_REST=0;
  48   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms
  49   1              LCD_REST=1;     
  50   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms          
  51   1              LCD_CS =0;  //打开片选使能
  52   1      
  53   1              LCD_WR_REG(0x01); //打开背光    
  54   1              LCD_WR_DATA(16); 
  55   1      
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:40:37 PAGE 2   

  56   1      
  57   1      }
  58          //清屏函数
  59          //Color:要清屏的填充色
  60          void LCD_Clear(u16 Color)
  61          {
  62   1              u8 VH,VL;
  63   1              u16 i,j;
  64   1              VH=Color>>8;
  65   1              VL=Color;       
  66   1              Address_set(0,0,LCD_W-1,LCD_H-1);
  67   1          for(i=0;i<LCD_W;i++)
  68   1               {
  69   2                for (j=0;j<LCD_H;j++)
  70   2                      {
  71   3                       LCD_WR_DATA8(VH,VL);
  72   3                  }
  73   2      
  74   2                }
  75   1      }
  76          //在指定位置显示一个汉字(32*33大小)
  77          //dcolor为内容颜色，gbcolor为背静颜色
  78          void showhanzi(unsigned int x,unsigned int y,unsigned char index)       
  79          {  
  80   1              unsigned char i,j;
  81   1              unsigned char *temp=hanzi;    
  82   1          Address_set(x,y,x+31,y+31); //设置区域      
  83   1              temp+=index*128;        
  84   1              for(j=0;j<128;j++)
  85   1              {
  86   2                      for(i=0;i<8;i++)
  87   2                      {                    
  88   3                              if((*temp&(1<<i))!=0)
  89   3                              {
  90   4                                      LCD_WR_DATA(POINT_COLOR);
  91   4                              } 
  92   3                              else
  93   3                              {
  94   4                                      LCD_WR_DATA(BACK_COLOR);
  95   4                              }   
  96   3                      }
  97   2                      temp++;
  98   2               }
  99   1      }
 100          //画点
 101          //POINT_COLOR:此点的颜色
 102          void LCD_DrawPoint(u16 x,u16 y)
 103          {
 104   1              Address_set(x,y,x,y);//设置光标位置 
 105   1              LCD_WR_DATA(POINT_COLOR);           
 106   1      }        
 107          //画一个大点
 108          //POINT_COLOR:此点的颜色
 109          void LCD_DrawPoint_big(u16 x,u16 y)
 110          {
 111   1              LCD_Fill(x-1,y-1,x+1,y+1,POINT_COLOR);
 112   1      } 
 113          //在指定区域内填充指定颜色
 114          //区域大小:
 115          //  (xend-xsta)*(yend-ysta)
 116          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 117          {          
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:40:37 PAGE 3   

 118   1              u16 i,j; 
 119   1              Address_set(xsta,ysta,xend,yend);      //设置光标位置 
 120   1              for(i=ysta;i<=yend;i++)
 121   1              {                                                                                                                       
 122   2                      for(j=xsta;j<=xend;j++)LCD_WR_DATA(color);//设置光标位置            
 123   2              }                                                   
 124   1      }  
 125          //画线
 126          //x1,y1:起点坐标
 127          //x2,y2:终点坐标  
 128          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 129          {
 130   1              u16 t; 
 131   1              int xerr=0,yerr=0,delta_x,delta_y,distance; 
 132   1              int incx,incy,uRow,uCol; 
 133   1      
 134   1              delta_x=x2-x1; //计算坐标增量 
 135   1              delta_y=y2-y1; 
 136   1              uRow=x1; 
 137   1              uCol=y1; 
 138   1              if(delta_x>0)incx=1; //设置单步方向 
 139   1              else if(delta_x==0)incx=0;//垂直线 
 140   1              else {incx=-1;delta_x=-delta_x;} 
 141   1              if(delta_y>0)incy=1; 
 142   1              else if(delta_y==0)incy=0;//水平线 
 143   1              else{incy=-1;delta_y=-delta_y;} 
 144   1              if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 145   1              else distance=delta_y; 
 146   1              for(t=0;t<=distance+1;t++ )//画线输出 
 147   1              {  
 148   2                      LCD_DrawPoint(uRow,uCol);//画点 
 149   2                      xerr+=delta_x ; 
 150   2                      yerr+=delta_y ; 
 151   2                      if(xerr>distance) 
 152   2                      { 
 153   3                              xerr-=distance; 
 154   3                              uRow+=incx; 
 155   3                      } 
 156   2                      if(yerr>distance) 
 157   2                      { 
 158   3                              yerr-=distance; 
 159   3                              uCol+=incy; 
 160   3                      } 
 161   2              }  
 162   1      }    
 163          //在指定位置显示一个字符
 164          
 165          //num:要显示的字符:" "--->"~"
 166          //mode:叠加方式(1)还是非叠加方式(0)
 167          //在指定位置显示一个字符
 168          
 169          //num:要显示的字符:" "--->"~"
 170          
 171          //mode:叠加方式(1)还是非叠加方式(0)
 172          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 mode)
 173          {
 174   1          u8 temp;
 175   1          u8 pos,t;
 176   1              u16 x0=x;
 177   1              u16 colortemp=POINT_COLOR;      
 178   1          if(x>LCD_W-16||y>LCD_H-16)return;       
 179   1              //设置窗口                 
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:40:37 PAGE 4   

 180   1              num=num-' ';//得到偏移后的值
 181   1              Address_set(x,y,x+8-1,y+16-1);      //设置光标位置 
 182   1              if(!mode) //非叠加方式
 183   1              {
 184   2                      for(pos=0;pos<16;pos++)
 185   2                      { 
 186   3                              temp=asc2_1608[(u16)num*16+pos];                 //调用1608字体
 187   3                              for(t=0;t<8;t++)
 188   3                          {                 
 189   4                              if(temp&0x01)POINT_COLOR=colortemp;
 190   4                                      else POINT_COLOR=BACK_COLOR;
 191   4                                      LCD_WR_DATA(POINT_COLOR);       
 192   4                                      temp>>=1; 
 193   4                                      x++;
 194   4                          }
 195   3                              x=x0;
 196   3                              y++;
 197   3                      }       
 198   2              }else//叠加方式
 199   1              {
 200   2                      for(pos=0;pos<16;pos++)
 201   2                      {
 202   3                          temp=asc2_1608[(u16)num*16+pos];             //调用1608字体
 203   3                              for(t=0;t<8;t++)
 204   3                          {                 
 205   4                              if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
 206   4                              temp>>=1; 
 207   4                          }
 208   3                      }
 209   2              }
 210   1              POINT_COLOR=colortemp;                            
 211   1      }   
 212          //m^n函数
 213          u32 mypow(u8 m,u8 n)
 214          {
 215   1              u32 result=1;    
 216   1              while(n--)result*=m;    
 217   1              return result;
 218   1      }                        
 219          //显示2个数字
 220          //x,y :起点坐标  
 221          //len :数字的位数
 222          //color:颜色
 223          //num:数值(0~4294967295);       
 224          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len)
 225          {               
 226   1              u8 t,temp;
 227   1              u8 enshow=0;
 228   1              num=(u16)num;
 229   1              for(t=0;t<len;t++)
 230   1              {
 231   2                      temp=(num/mypow(10,len-t-1))%10;
 232   2                      if(enshow==0&&t<(len-1))
 233   2                      {
 234   3                              if(temp==0)
 235   3                              {
 236   4                                      LCD_ShowChar(x+8*t,y,' ',0);
 237   4                                      continue;
 238   4                              }else enshow=1; 
 239   3                               
 240   3                      }
 241   2                      LCD_ShowChar(x+8*t,y,temp+48,0); 
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:40:37 PAGE 5   

 242   2              }
 243   1      } 
 244          //显示字符串
 245          //x,y:起点坐标  
 246          //*p:字符串起始地址
 247          //用16字体
 248          void LCD_ShowString(u16 x,u16 y,const u8 *p)
 249          {         
 250   1          while(*p!='\0')
 251   1          {       
 252   2              if(x>LCD_W-16){x=0;y+=16;}
 253   2              if(y>LCD_H-16){y=x=0;LCD_Clear(RED);}
 254   2              LCD_ShowChar(x,y,*p,0);
 255   2              x+=8;
 256   2              p++;
 257   2          }  
 258   1      }
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2055    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4      98
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
