C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) DEBUG OB
                    -JECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /**************************************************************************************
  24          //=======================================液晶屏数据线接线==========================================//
  25          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  26          #define  LCD_DataPortH P2 
  27          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  28          #define  LCD_DataPortL P0     
  29          //=======================================液晶屏控制线接线==========================================//
  30          CS=P1^3;    //片选  
  31          RS=P1^2;      //数据/命令切换
  32          WR=P1^1;    //写控制
  33          RD=P1^0;    //读控制
  34          RESET=P3^3;   //复位 
  35          LCD_BL=P3^2;  //背光控制
  36          //=========================================触摸屏触接线=========================================//
  37          //不使用触摸或者模块本身不带触摸，则可不连接
  38          DCLK    =    P3^6; //触摸屏SPI总线时钟信号接P3.6  
  39          TCS       =    P3^7; //触摸片选TCS接P3.7
  40          DIN       =    P3^4; //MOSI接P3.4 
  41          DOUT      =    P3^5; //MISO接P3.5                                              
  42          Penirq    =    P4^0; //PEN引脚接P4.0，如单片机无P4组，请自行更改其他可用IO并修改代码定义
  43          **************************************************************************************************/ 
  44          
  45          //LCD的画笔颜色和背景色    
  46          u16 POINT_COLOR=0x0000; //画笔颜色
  47          u16 BACK_COLOR=0xFFFF;  //背景色 
  48          //管理LCD重要参数
  49          //默认为竖屏
  50          _lcd_dev lcddev;
  51          
  52          
  53          
  54          //******************************************************************
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 2   

  55          //函数名：  LCD_Write_Bus
  56          //作者：    xiao冯@全动电子
  57          //日期：    2013-02-22
  58          //功能：    向液晶屏总线写入数据(LCD驱动内部函数)
  59          //输入参数：VH:高8位数据
  60          //          VL:低8位数据
  61          //返回值：  无
  62          //修改记录：无
  63          //******************************************************************
  64          
  65          void LCD_Write_Bus(char VH,char VL)   
  66          {
  67   1        LCD_CS=0; 
  68   1        LCD_DataPortH=VH; 
  69   1        LCD_DataPortL=VL;   
  70   1        LCD_WR=0;
  71   1        LCD_WR=1; 
  72   1        LCD_CS=1;
  73   1      }
  74          
  75          
  76          
  77          //******************************************************************
  78          //函数名：  LCD_WR_DATA8
  79          //作者：    xiao冯@全动电子
  80          //日期：    2013-02-22
  81          //功能：    向液晶屏总线写入写8位数据
  82          //输入参数：VH:高8位数据
  83          //          VL:低8位数据
  84          //返回值：  无
  85          //修改记录：无
  86          //******************************************************************
  87          void LCD_WR_DATA8(char VH,char VL) 
  88          {
  89   1        LCD_RS=1;
  90   1        LCD_Write_Bus(VH,VL);
  91   1      } 
  92          
  93          //******************************************************************
  94          //函数名：  LCD_WR_REG
  95          //作者：    xiao冯@全动电子
  96          //日期：    2013-02-22
  97          //功能：    向液晶屏总线写入写16位指令
  98          //输入参数：Reg:待写入的指令值
  99          //返回值：  无
 100          //修改记录：无
 101          //******************************************************************
 102          void LCD_WR_REG(int Reg)   
 103          { 
 104   1        LCD_RS=0;
 105   1        LCD_Write_Bus(Reg>>8,Reg);
 106   1      } 
 107          
 108          //******************************************************************
 109          //函数名：  LCD_WR_DATA
 110          //作者：    xiao冯@全动电子
 111          //日期：    2013-02-22
 112          //功能：    向液晶屏总线写入写16位数据
 113          //输入参数：Data:待写入的数据
 114          //返回值：  无
 115          //修改记录：无
 116          //******************************************************************
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 3   

 117           void LCD_WR_DATA(int Data)
 118          {
 119   1        LCD_RS=1;
 120   1        LCD_Write_Bus(Data>>8,Data);
 121   1      }
 122          
 123          //******************************************************************
 124          //函数名：  LCD_WriteReg
 125          //作者：    xiao冯@全动电子
 126          //日期：    2013-02-22
 127          //功能：    写寄存器数据
 128          //输入参数：LCD_Reg:寄存器地址
 129          //      LCD_RegValue:要写入的数据
 130          //返回值：  无
 131          //修改记录：无
 132          //******************************************************************
 133          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 134          {
 135   1        LCD_WR_REG(LCD_Reg);
 136   1        LCD_WR_DATA(LCD_RegValue);
 137   1      }
 138          
 139          //******************************************************************
 140          //函数名：  LCD_WriteRAM_Prepare
 141          //作者：    xiao冯@全动电子
 142          //日期：    2013-02-22
 143          //功能：    开始写GRAM
 144          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 145          //输入参数：无
 146          //返回值：  无
 147          //修改记录：无
 148          //******************************************************************
 149          void LCD_WriteRAM_Prepare(void)
 150          {
 151   1        LCD_WR_REG(lcddev.wramcmd);   
 152   1      }
 153          
 154          
 155          //******************************************************************
 156          //函数名：  LCD_Clear
 157          //作者：    xiao冯@全动电子
 158          //日期：    2013-02-22
 159          //功能：    LCD全屏填充清屏函数
 160          //输入参数：Color:要清屏的填充色
 161          //返回值：  无
 162          //修改记录：无
 163          //******************************************************************
 164          void LCD_Clear(u16 Color)
 165          {
 166   1        u32 index=0;      
 167   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 168   1      #if LCD_USE8BIT_MODEL==1
 169   1        LCD_RS=1;//写数据 
 170   1        LCD_CS=0;    
 171   1        for(index=0;index<lcddev.width*lcddev.height;index++)
 172   1        {
 173   2          LCD_DataPortL=(Color>>8); 
 174   2          LCD_WR=0;
 175   2          LCD_WR=1; 
 176   2          
 177   2          LCD_DataPortL=Color;  
 178   2          LCD_WR=0;
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 4   

 179   2          LCD_WR=1;   
 180   2        }
 181   1        LCD_CS=1; 
 182   1      #else //16位模式
                for(index=0;index<lcddev.width*lcddev.height;index++)
                {
                  LCD_WR_DATA(Color);     
                }
              #endif
 188   1        
 189   1      } 
 190          
 191          //******************************************************************
 192          //函数名：  LCD_DrawPoint
 193          //作者：    xiao冯@全动电子
 194          //日期：    2013-02-22
 195          //功能：    在指定位置写入一个像素点数据
 196          //输入参数：(x,y):光标坐标
 197          //返回值：  无
 198          //修改记录：无
 199          //******************************************************************
 200          void LCD_DrawPoint(u16 x,u16 y)
 201          {
 202   1        LCD_SetCursor(x,y);//设置光标位置 
 203   1      #if LCD_USE8BIT_MODEL==1
 204   1        LCD_CS=0;
 205   1        LCD_RD=1;
 206   1        LCD_RS=1;//写地址    
 207   1        LCD_DataPortL=(POINT_COLOR>>8); 
 208   1        LCD_WR=0;
 209   1        LCD_WR=1;
 210   1        LCD_DataPortL=POINT_COLOR;  
 211   1        LCD_WR=0;
 212   1        LCD_WR=1;  
 213   1        LCD_CS=1;
 214   1      #else
                LCD_WR_DATA(POINT_COLOR); 
              #endif
 217   1      }  
 218          //******************************************************************
 219          //函数名：  LCD_DrawPoint_16Bit
 220          //作者：    xiao冯@全动电子
 221          //日期：    2013-02-22
 222          //功能：    8位总线下如何写入一个16位数据
 223          //输入参数：(x,y):光标坐标
 224          //返回值：  无
 225          //修改记录：无
 226          //******************************************************************
 227          void LCD_DrawPoint_16Bit(u16 color)
 228          {
 229   1      #if LCD_USE8BIT_MODEL==1
 230   1        LCD_CS=0;
 231   1        LCD_RD=1;
 232   1        LCD_RS=1;//写地址    
 233   1        LCD_DataPortL=(color>>8); 
 234   1        LCD_WR=0;
 235   1        LCD_WR=1;
 236   1        LCD_DataPortL=color;  
 237   1        LCD_WR=0;
 238   1        LCD_WR=1;  
 239   1        LCD_CS=1;
 240   1      #else
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 5   

                LCD_WR_DATA(color); 
              #endif
 243   1      
 244   1      
 245   1      }
 246          //******************************************************************
 247          //函数名：  LCD_Reset
 248          //作者：    xiao冯@全动电子
 249          //日期：    2013-02-22
 250          //功能：    LCD复位函数，液晶初始化前要调用此函数
 251          //输入参数：无
 252          //返回值：  无
 253          //修改记录：无
 254          //******************************************************************
 255          void LCD_Reset(void)
 256          {
 257   1        LCD_RESET=1;
 258   1        delay_ms(50); 
 259   1        LCD_RESET=0;
 260   1        delay_ms(50);
 261   1        LCD_RESET=1;
 262   1        delay_ms(50);
 263   1      }
 264          
 265          //******************************************************************
 266          //函数名：  LCD_Init
 267          //作者：    xiao冯@全动电子
 268          //日期：    2013-02-22
 269          //功能：    LCD初始化
 270          //输入参数：无
 271          //返回值：  无
 272          //修改记录：无
 273          //******************************************************************
 274          void LCD_Init(void)
 275          {
 276   1        LCD_Reset(); //初始化之前复位
 277   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 278   1      
 279   1        //液晶屏初始化
 280   1        LCD_WR_REG(0XF1);
 281   1        LCD_WR_DATA(0x36);
 282   1        LCD_WR_DATA(0x04);
 283   1        LCD_WR_DATA(0x00);
 284   1        LCD_WR_DATA(0x3C);
 285   1        LCD_WR_DATA(0X0F);
 286   1        LCD_WR_DATA(0x8F);
 287   1        LCD_WR_REG(0XF2);
 288   1        LCD_WR_DATA(0x18);
 289   1        LCD_WR_DATA(0xA3);
 290   1        LCD_WR_DATA(0x12);
 291   1        LCD_WR_DATA(0x02);
 292   1        LCD_WR_DATA(0XB2);
 293   1        LCD_WR_DATA(0x12);
 294   1        LCD_WR_DATA(0xFF);
 295   1        LCD_WR_DATA(0x10);
 296   1        LCD_WR_DATA(0x00);
 297   1        LCD_WR_REG(0XF8);
 298   1        LCD_WR_DATA(0x21);
 299   1        LCD_WR_DATA(0x04);
 300   1        LCD_WR_REG(0XF9);
 301   1        LCD_WR_DATA(0x00);
 302   1        LCD_WR_DATA(0x08);
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 6   

 303   1        LCD_WR_REG(0x36);
 304   1        LCD_WR_DATA(0x08);
 305   1        LCD_WR_REG(0xB4);
 306   1        LCD_WR_DATA(0x00);
 307   1        LCD_WR_REG(0xB6);
 308   1        LCD_WR_DATA(0x02);
 309   1        LCD_WR_DATA(0x22);
 310   1        LCD_WR_REG(0xC1);
 311   1        LCD_WR_DATA(0x41);
 312   1        LCD_WR_REG(0xC5);
 313   1        LCD_WR_DATA(0x00);
 314   1        LCD_WR_DATA(0x18);
 315   1        LCD_WR_REG(0xE0);
 316   1        LCD_WR_DATA(0x0F);
 317   1        LCD_WR_DATA(0x1F);
 318   1        LCD_WR_DATA(0x1C);
 319   1        LCD_WR_DATA(0x0C);
 320   1        LCD_WR_DATA(0x0F);
 321   1        LCD_WR_DATA(0x08);
 322   1        LCD_WR_DATA(0x48);
 323   1        LCD_WR_DATA(0x98);
 324   1        LCD_WR_DATA(0x37);
 325   1        LCD_WR_DATA(0x0A);
 326   1        LCD_WR_DATA(0x13);
 327   1        LCD_WR_DATA(0x04);
 328   1        LCD_WR_DATA(0x11);
 329   1        LCD_WR_DATA(0x0D);
 330   1        LCD_WR_DATA(0x00);
 331   1        LCD_WR_REG(0xE1);
 332   1        LCD_WR_DATA(0x0F);
 333   1        LCD_WR_DATA(0x32);
 334   1        LCD_WR_DATA(0x2E);
 335   1        LCD_WR_DATA(0x0B);
 336   1        LCD_WR_DATA(0x0D);
 337   1        LCD_WR_DATA(0x05);
 338   1        LCD_WR_DATA(0x47);
 339   1        LCD_WR_DATA(0x75);
 340   1        LCD_WR_DATA(0x37);
 341   1        LCD_WR_DATA(0x06);
 342   1        LCD_WR_DATA(0x10);
 343   1        LCD_WR_DATA(0x03);
 344   1        LCD_WR_DATA(0x24);
 345   1        LCD_WR_DATA(0x20);
 346   1        LCD_WR_DATA(0x00);
 347   1        LCD_WR_REG(0x3A);
 348   1        LCD_WR_DATA(0x55);
 349   1        LCD_WR_REG(0x11);
 350   1        LCD_WR_REG(0x36);
 351   1        LCD_WR_DATA(0xC8);
 352   1        delay_ms(120);
 353   1        LCD_WR_REG(0x29);
 354   1      
 355   1        //设置LCD属性参数
 356   1        LCD_SetParam();//设置LCD参数   
 357   1        LCD_BL=1;//点亮背光  
 358   1      }
 359          //******************************************************************
 360          //函数名：  LCD_SetWindows
 361          //作者：    xiao冯@全动电子
 362          //日期：    2013-02-22
 363          //功能：    设置显示窗口
 364          //输入参数：(xStar,yStar):窗口左上角起始坐标
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 7   

 365          //        (xEnd,yEnd):窗口右下角结束坐标
 366          //返回值：  无
 367          //修改记录：无
 368          //******************************************************************
 369          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 370          { 
 371   1        LCD_WR_REG(lcddev.setxcmd); 
 372   1        LCD_WR_DATA(xStar>>8);
 373   1        LCD_WR_DATA(0x00FF&xStar);    
 374   1        LCD_WR_DATA(xEnd>>8);
 375   1        LCD_WR_DATA(0x00FF&xEnd);
 376   1      
 377   1        LCD_WR_REG(lcddev.setycmd); 
 378   1        LCD_WR_DATA(yStar>>8);
 379   1        LCD_WR_DATA(0x00FF&yStar);    
 380   1        LCD_WR_DATA(yEnd>>8);
 381   1        LCD_WR_DATA(0x00FF&yEnd);
 382   1      
 383   1        LCD_WriteRAM_Prepare(); //开始写入GRAM      
 384   1      }   
 385          
 386          //******************************************************************
 387          //函数名：  LCD_SetCursor
 388          //作者：    xiao冯@全动电子
 389          //日期：    2013-02-22
 390          //功能：    设置光标位置
 391          //输入参数：Xpos:横坐标
 392          //      Ypos:纵坐标
 393          //返回值：  无
 394          //修改记录：无
 395          //******************************************************************
 396          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 397          {               
 398   1        LCD_WR_REG(lcddev.setxcmd); 
 399   1        LCD_WR_DATA(Xpos>>8);
 400   1        LCD_WR_DATA(0x00FF&Xpos);   
 401   1        LCD_WR_DATA((Xpos+1)>>8);
 402   1        LCD_WR_DATA((Xpos+1));
 403   1        
 404   1        LCD_WR_REG(lcddev.setycmd); 
 405   1        LCD_WR_DATA(Ypos>>8);
 406   1        LCD_WR_DATA(0x00FF&Ypos);   
 407   1        LCD_WR_DATA((Ypos+1)>>8);
 408   1        LCD_WR_DATA((Ypos+1));
 409   1        LCD_WriteRAM_Prepare(); //开始写入GRAM    
 410   1      } 
 411          
 412          //******************************************************************
 413          //函数名：  LCD_SetParam
 414          //作者：    xiao冯@全动电子
 415          //日期：    2013-02-22
 416          //功能：    设置LCD参数，方便进行横竖屏模式切换
 417          //输入参数：无
 418          //返回值：  无
 419          //修改记录：无
 420          //******************************************************************
 421          void LCD_SetParam(void)
 422          { 
 423   1        lcddev.setxcmd=0x2A;
 424   1        lcddev.setycmd=0x2B;
 425   1        lcddev.wramcmd=0x2C;
 426   1      #if USE_HORIZONTAL==1 //使用横屏    
C51 COMPILER V9.56.0.0   LCD                                                               05/15/2018 14:15:34 PAGE 8   

 427   1        lcddev.dir=1;//横屏
 428   1        lcddev.width=480;
 429   1        lcddev.height=320;      
 430   1        LCD_WriteReg(0x36,(1<<3)|(1<<7)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 431   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=320;
                lcddev.height=480;  
                LCD_WriteReg(0x36,(1<<3)|(1<<6)|(1<<7));//BGR==1,MY==0,MX==0,MV==0
              #endif
 437   1      }   
 438          
 439          void LCD_direction(u8 direction )
 440          { 
 441   1        switch(direction){
 442   2          case 3:
 443   2            lcddev.width=480;
 444   2            lcddev.height=320;
 445   2            LCD_WriteReg(0x36,(1<<3)|(1<<7)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 446   2          break;
 447   2          case 1:
 448   2            lcddev.width=480;
 449   2            lcddev.height=320;
 450   2            LCD_WriteReg(0x36,(1<<3)|(0<<7)|(1<<6)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 451   2          break;
 452   2          case 2:                 
 453   2            lcddev.width=320;
 454   2            lcddev.height=480;  
 455   2            LCD_WriteReg(0x36,(1<<3)|(1<<6)|(1<<7));//BGR==1,MY==0,MX==0,MV==0
 456   2          break;
 457   2          case 0:                 
 458   2            lcddev.width=320;
 459   2            lcddev.height=480;  
 460   2            LCD_WriteReg(0x36,(1<<3)|(0<<6)|(0<<7));//BGR==1,MY==0,MX==0,MV==0
 461   2          break;
 462   2          default:break;
 463   2        }
 464   1          
 465   1      
 466   1      }  
 467          
 468          
 469          
 470          
 471          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1041    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
