C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN .\obj\gui.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE GUI\gui.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) 
                    -DEBUG OBJECTEXTEND PRINT(.\gui.lst) TABS(2) OBJECT(.\obj\gui.obj)

line level    source

   1          #include "lcd.h"
   2          #include "font.h" 
   3          #include "sys.h"
   4          #include "gui.h"
   5          #include "string.h"
   6          //////////////////////////////////////////////////////////////////////////////////   
   7          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   8          //测试硬件：单片机STC51,晶振30M  单片机工作电压3.3V
   9          //QDtech-TFT液晶驱动 for C51
  10          //中景园电子
  11          //淘宝网站:https://shop73023976.taobao.com/?spm=2013.1.1000126.d21.o6byVe
  12          //我司提供技术支持，任何技术问题欢迎随时交流学习
  13          //手机:15989313508（冯工） 
  14          
  15          //创建日期:2016-04-17
  16          //版本：V1.1
  17          //版权所有，盗版必究。
  18          //Copyright(C) 中景园电子2009-2019
  19          //All rights reserved
  20          //********************************************************************************
  21          
  22          //******************************************************************
  23          //函数名：  GUI_DrawPoint
  24          //作者：    中景园电子
  25          //日期：    2013-02-22
  26          //功能：    GUI描绘一个点
  27          //输入参数：x:光标位置x坐标
  28          //          y:光标位置y坐标
  29          //      color:要填充的颜色
  30          //返回值：  无
  31          //修改记录：无
  32          //******************************************************************
  33          void GUI_DrawPoint(u16 x,u16 y,u16 color)
  34          {
  35   1        LCD_SetCursor(x,y);//设置光标位置 
  36   1        LCD_DrawPoint_16Bit(color); 
  37   1      }
  38          
  39          //******************************************************************
  40          //函数名：  LCD_Fill
  41          //作者：    中景园电子
  42          //日期：    2013-02-22
  43          //功能：    在指定区域内填充颜色
  44          //输入参数：sx:指定区域开始点x坐标
  45          //          sy:指定区域开始点y坐标
  46          //      ex:指定区域结束点x坐标
  47          //      ey:指定区域结束点y坐标
  48          //          color:要填充的颜色
  49          //返回值：  无
  50          //修改记录：无
  51          //******************************************************************
  52          void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
  53          {   
  54   1      
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 2   

  55   1        u16 i,j;      
  56   1        u16 width=ex-sx+1;    //得到填充的宽度
  57   1        u16 height=ey-sy+1;   //高度
  58   1        LCD_SetWindows(sx,sy,ex-1,ey-1);//设置显示窗口
  59   1      
  60   1      #if LCD_USE8BIT_MODEL==1
                LCD_RS=1;//写数据 
                LCD_CS=0;    
                for(i=0;i<height;i++)
                {
                  for(j=0;j<width;j++)
                  {
                    LCD_DataPortL=(color>>8);//9486  8位模式使用低8位DB0~DB7  
                    LCD_WR=0;
                    LCD_WR=1; 
                    
                    LCD_DataPortL=color;  
                    LCD_WR=0;
                    LCD_WR=1;
                  }   
                }
                LCD_CS=1; 
              #else //16位模式
  78   1        for(i=0;i<height;i++)
  79   1        {
  80   2          for(j=0;j<width;j++)
  81   2          LCD_WR_DATA(color); //写入数据   
  82   2        }
  83   1      #endif
  84   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口设置为全屏
  85   1      }
  86          
  87          //******************************************************************
  88          //函数名：  LCD_DrawLine
  89          //作者：    中景园电子
  90          //日期：    2013-02-22
  91          //功能：    GUI画线
  92          //输入参数：x1,y1:起点坐标
  93          //          x2,y2:终点坐标 
  94          //返回值：  无
  95          //修改记录：无
  96          //****************************************************************** 
  97          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
  98          {
  99   1        u16 t; 
 100   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
 101   1        int incx,incy,uRow,uCol; 
 102   1      
 103   1        delta_x=x2-x1; //计算坐标增量 
 104   1        delta_y=y2-y1; 
 105   1        uRow=x1; 
 106   1        uCol=y1; 
 107   1        if(delta_x>0)incx=1; //设置单步方向 
 108   1        else if(delta_x==0)incx=0;//垂直线 
 109   1        else {incx=-1;delta_x=-delta_x;} 
 110   1        if(delta_y>0)incy=1; 
 111   1        else if(delta_y==0)incy=0;//水平线 
 112   1        else{incy=-1;delta_y=-delta_y;} 
 113   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 114   1        else distance=delta_y; 
 115   1        for(t=0;t<=distance+1;t++ )//画线输出 
 116   1        {  
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 3   

 117   2          LCD_DrawPoint(uRow,uCol);//画点 
 118   2          xerr+=delta_x ; 
 119   2          yerr+=delta_y ; 
 120   2          if(xerr>distance) 
 121   2          { 
 122   3            xerr-=distance; 
 123   3            uRow+=incx; 
 124   3          } 
 125   2          if(yerr>distance) 
 126   2          { 
 127   3            yerr-=distance; 
 128   3            uCol+=incy; 
 129   3          } 
 130   2        }  
 131   1      } 
 132          
 133          //******************************************************************
 134          //函数名：  LCD_DrawRectangle
 135          //作者：    中景园电子
 136          //日期：    2013-02-22
 137          //功能：    GUI画矩形(非填充)
 138          //输入参数：(x1,y1),(x2,y2):矩形的对角坐标
 139          //返回值：  无
 140          //修改记录：无
 141          //******************************************************************  
 142          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 143          {
 144   1        LCD_DrawLine(x1,y1,x2,y1);
 145   1        LCD_DrawLine(x1,y1,x1,y2);
 146   1        LCD_DrawLine(x1,y2,x2,y2);
 147   1        LCD_DrawLine(x2,y1,x2,y2);
 148   1      }  
 149          
 150          //******************************************************************
 151          //函数名：  LCD_DrawFillRectangle
 152          //作者：    中景园电子
 153          //日期：    2013-02-22
 154          //功能：    GUI画矩形(填充)
 155          //输入参数：(x1,y1),(x2,y2):矩形的对角坐标
 156          //返回值：  无
 157          //修改记录：无
 158          //******************************************************************   
 159          void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 160          {
 161   1        LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 162   1      
 163   1      }
 164           
 165          //******************************************************************
 166          //函数名：  _draw_circle_8
 167          //作者：    中景园电子
 168          //日期：    2013-02-22
 169          //功能：    8对称性画圆算法(内部调用)
 170          //输入参数：(xc,yc) :圆中心坐标
 171          //      (x,y):光标相对于圆心的坐标
 172          //          c:填充的颜色
 173          //返回值：  无
 174          //修改记录：无
 175          //******************************************************************  
 176          void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 177          {
 178   1        GUI_DrawPoint(xc + x, yc + y, c);
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 4   

 179   1      
 180   1        GUI_DrawPoint(xc - x, yc + y, c);
 181   1      
 182   1        GUI_DrawPoint(xc + x, yc - y, c);
 183   1      
 184   1        GUI_DrawPoint(xc - x, yc - y, c);
 185   1      
 186   1        GUI_DrawPoint(xc + y, yc + x, c);
 187   1      
 188   1        GUI_DrawPoint(xc - y, yc + x, c);
 189   1      
 190   1        GUI_DrawPoint(xc + y, yc - x, c);
 191   1      
 192   1        GUI_DrawPoint(xc - y, yc - x, c);
 193   1      }
 194          
 195          //******************************************************************
 196          //函数名：  gui_circle
 197          //作者：    中景园电子
 198          //日期：    2013-02-22
 199          //功能：    在指定位置画一个指定大小的圆(填充)
 200          //输入参数：(xc,yc) :圆中心坐标
 201          //          c:填充的颜色
 202          //      r:圆半径
 203          //      fill:填充判断标志，1-填充，0-不填充
 204          //返回值：  无
 205          //修改记录：无
 206          //******************************************************************  
 207          void gui_circle(int xc, int yc,u16 c,int r, int fill)
 208          {
 209   1        int x = 0, y = r, yi, d;
 210   1      
 211   1        d = 3 - 2 * r;
 212   1      
 213   1      
 214   1        if (fill) 
 215   1        {
 216   2          // 如果填充（画实心圆）
 217   2          while (x <= y) {
 218   3            for (yi = x; yi <= y; yi++)
 219   3              _draw_circle_8(xc, yc, x, yi, c);
 220   3      
 221   3            if (d < 0) {
 222   4              d = d + 4 * x + 6;
 223   4            } else {
 224   4              d = d + 4 * (x - y) + 10;
 225   4              y--;
 226   4            }
 227   3            x++;
 228   3          }
 229   2        } else 
 230   1        {
 231   2          // 如果不填充（画空心圆）
 232   2          while (x <= y) {
 233   3            _draw_circle_8(xc, yc, x, y, c);
 234   3            if (d < 0) {
 235   4              d = d + 4 * x + 6;
 236   4            } else {
 237   4              d = d + 4 * (x - y) + 10;
 238   4              y--;
 239   4            }
 240   3            x++;
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 5   

 241   3          }
 242   2        }
 243   1      }
 244          
 245          //******************************************************************
 246          //函数名：  LCD_ShowChar
 247          //作者：    中景园电子
 248          //日期：    2013-02-22
 249          //功能：    显示单个英文字符
 250          //输入参数：(x,y):字符显示位置起始坐标
 251          //          fc:前置画笔颜色
 252          //      bc:背景颜色
 253          //      num:数值（0-94）
 254          //      size:字体大小
 255          //      mode:模式  0,填充模式;1,叠加模式
 256          //返回值：  无
 257          //修改记录：无
 258          //******************************************************************  
 259          void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 260          {  
 261   1          u8 temp;
 262   1          u8 pos,t;
 263   1        u16 colortemp=POINT_COLOR;      
 264   1             
 265   1        num=num-' ';//得到偏移后的值
 266   1        LCD_SetWindows(x,y,x+size/2-1,y+size-1);//设置单个文字显示窗口
 267   1        if(!mode) //非叠加方式
 268   1        {
 269   2          
 270   2          for(pos=0;pos<size;pos++)
 271   2          {
 272   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 273   3            else temp=asc2_1608[num][pos];     //调用1608字体
 274   3            for(t=0;t<size/2;t++)
 275   3              {                 
 276   4                  if(temp&0x01)LCD_DrawPoint_16Bit(fc); 
 277   4              else LCD_DrawPoint_16Bit(bc); 
 278   4              temp>>=1; 
 279   4              
 280   4              }
 281   3            
 282   3          } 
 283   2        }else//叠加方式
 284   1        {
 285   2          for(pos=0;pos<size;pos++)
 286   2          {
 287   3            if(size==12)temp=asc2_1206[num][pos];//调用1206字体
 288   3            else temp=asc2_1608[num][pos];     //调用1608字体
 289   3            for(t=0;t<size/2;t++)
 290   3              {   
 291   4              POINT_COLOR=fc;              
 292   4                  if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点    
 293   4                  temp>>=1; 
 294   4              }
 295   3          }
 296   2        }
 297   1        POINT_COLOR=colortemp;  
 298   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏             
 299   1      } 
 300          //******************************************************************
 301          //函数名：  LCD_ShowString
 302          //作者：    中景园电子
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 6   

 303          //日期：    2013-02-22
 304          //功能：    显示英文字符串
 305          //输入参数：x,y :起点坐标  
 306          //      size:字体大小
 307          //      *p:字符串起始地址
 308          //      mode:模式 0,填充模式;1,叠加模式
 309          //返回值：  无
 310          //修改记录：无
 311          //******************************************************************      
 312          void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 313          {         
 314   1          while((*p<='~')&&(*p>=' '))//判断是不是非法字符!
 315   1          {   
 316   2          if(x>(lcddev.width-1)||y>(lcddev.height-1)) 
 317   2          return;     
 318   2              LCD_ShowChar(x,y,POINT_COLOR,BACK_COLOR,*p,size,mode);
 319   2              x+=size/2;
 320   2              p++;
 321   2          }  
 322   1      } 
 323          
 324          //******************************************************************
 325          //函数名：  mypow
 326          //作者：    中景园电子
 327          //日期：    2013-02-22
 328          //功能：    求m的n次方(gui内部调用)
 329          //输入参数：m:乘数
 330          //          n:幂
 331          //返回值：  m的n次方
 332          //修改记录：无
 333          //******************************************************************  
 334          u32 mypow(u8 m,u8 n)
 335          {
 336   1        u32 result=1;  
 337   1        while(n--)result*=m;    
 338   1        return result;
 339   1      }
 340          
 341          //******************************************************************
 342          //函数名：  LCD_ShowNum
 343          //作者：    中景园电子
 344          //日期：    2013-02-22
 345          //功能：    显示单个数字变量值
 346          //输入参数：x,y :起点坐标  
 347          //      len :指定显示数字的位数
 348          //      size:字体大小(12,16)
 349          //      color:颜色
 350          //      num:数值(0~4294967295)
 351          //返回值：  无
 352          //修改记录：无
 353          //******************************************************************         
 354          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
 355          {           
 356   1        u8 t,temp;
 357   1        u8 enshow=0;               
 358   1        for(t=0;t<len;t++)
 359   1        {
 360   2          temp=(num/mypow(10,len-t-1))%10;
 361   2          if(enshow==0&&t<(len-1))
 362   2          {
 363   3            if(temp==0)
 364   3            {
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 7   

 365   4              LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,' ',size,0);
 366   4              continue;
 367   4            }else enshow=1; 
 368   3             
 369   3          }
 370   2          LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,temp+'0',size,0); 
 371   2        }
 372   1      } 
 373          
 374          //******************************************************************
 375          //函数名：  GUI_DrawFont16
 376          //作者：    中景园电子
 377          //日期：    2013-02-22
 378          //功能：    显示单个16X16中文字体
 379          //输入参数：x,y :起点坐标
 380          //      fc:前置画笔颜色
 381          //      bc:背景颜色  
 382          //      s:字符串地址
 383          //      mode:模式 0,填充模式;1,叠加模式
 384          //返回值：  无
 385          //修改记录：无
 386          //******************************************************************
 387          void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 388          {
 389   1        u8 i,j;
 390   1        u16 k;
 391   1        u16 HZnum;
 392   1        u16 x0=x;
 393   1        HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);  //自动统计汉字数目
 394   1        
 395   1            
 396   1        for (k=0;k<HZnum;k++) 
 397   1        {
 398   2          if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
 399   2          {   LCD_SetWindows(x,y,x+16-1,y+16-1);
 400   3              for(i=0;i<16*2;i++)
 401   3              {
 402   4              for(j=0;j<8;j++)
 403   4                { 
 404   5                if(!mode) //非叠加方式
 405   5                {
 406   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 407   6                  else LCD_DrawPoint_16Bit(bc);
 408   6                }
 409   5                else
 410   5                {
 411   6                  POINT_COLOR=fc;
 412   6                  if(tfont16[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 413   6                  x++;
 414   6                  if((x-x0)==16)
 415   6                  {
 416   7                    x=x0;
 417   7                    y++;
 418   7                    break;
 419   7                  }
 420   6                }
 421   5      
 422   5              }
 423   4              
 424   4            }
 425   3            
 426   3            
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 8   

 427   3          }           
 428   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 429   2        }
 430   1      
 431   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 432   1      } 
 433          
 434          //******************************************************************
 435          //函数名：  GUI_DrawFont24
 436          //作者：    中景园电子
 437          //日期：    2013-02-22
 438          //功能：    显示单个24X24中文字体
 439          //输入参数：x,y :起点坐标
 440          //      fc:前置画笔颜色
 441          //      bc:背景颜色  
 442          //      s:字符串地址
 443          //      mode:模式 0,填充模式;1,叠加模式
 444          //返回值：  无
 445          //修改记录：无
 446          //******************************************************************
 447          void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 448          {
 449   1        u8 i,j;
 450   1        u16 k;
 451   1        u16 HZnum;
 452   1        u16 x0=x;
 453   1        HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);  //自动统计汉字数目
 454   1          
 455   1            for (k=0;k<HZnum;k++) 
 456   1            {
 457   2              if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
 458   2              {   LCD_SetWindows(x,y,x+24-1,y+24-1);
 459   3                  for(i=0;i<24*3;i++)
 460   3                  {
 461   4                    for(j=0;j<8;j++)
 462   4                    {
 463   5                      if(!mode) //非叠加方式
 464   5                      {
 465   6                        if(tfont24[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 466   6                        else LCD_DrawPoint_16Bit(bc);
 467   6                      }
 468   5                    else
 469   5                    {
 470   6                      POINT_COLOR=fc;
 471   6                      if(tfont24[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 472   6                      x++;
 473   6                      if((x-x0)==24)
 474   6                      {
 475   7                        x=x0;
 476   7                        y++;
 477   7                        break;
 478   7                      }
 479   6                    }
 480   5                  }
 481   4                }
 482   3                
 483   3                
 484   3              }           
 485   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 486   2            }
 487   1      
 488   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 9   

 489   1      }
 490          
 491          //******************************************************************
 492          //函数名：  GUI_DrawFont32
 493          //作者：    中景园电子
 494          //日期：    2013-02-22
 495          //功能：    显示单个32X32中文字体
 496          //输入参数：x,y :起点坐标
 497          //      fc:前置画笔颜色
 498          //      bc:背景颜色  
 499          //      s:字符串地址
 500          //      mode:模式 0,填充模式;1,叠加模式
 501          //返回值：  无
 502          //修改记录：无
 503          //****************************************************************** 
 504          void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 505          {
 506   1        u8 i,j;
 507   1        u16 k;
 508   1        u16 HZnum;
 509   1        u16 x0=x;
 510   1        HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);  //自动统计汉字数目
 511   1        for (k=0;k<HZnum;k++) 
 512   1            {
 513   2              if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
 514   2              {   LCD_SetWindows(x,y,x+32-1,y+32-1);
 515   3                  for(i=0;i<32*4;i++)
 516   3                  {
 517   4                  for(j=0;j<8;j++)
 518   4                    {
 519   5                    if(!mode) //非叠加方式
 520   5                    {
 521   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_DrawPoint_16Bit(fc);
 522   6                      else LCD_DrawPoint_16Bit(bc);
 523   6                    }
 524   5                    else
 525   5                    {
 526   6                      POINT_COLOR=fc;
 527   6                      if(tfont32[k].Msk[i]&(0x80>>j)) LCD_DrawPoint(x,y);//画一个点
 528   6                      x++;
 529   6                      if((x-x0)==32)
 530   6                      {
 531   7                        x=x0;
 532   7                        y++;
 533   7                        break;
 534   7                      }
 535   6                    }
 536   5                  }
 537   4                }
 538   3                
 539   3                
 540   3              }           
 541   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 542   2            }
 543   1        
 544   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复窗口为全屏  
 545   1      } 
 546          
 547          //******************************************************************
 548          //函数名：  Show_Str
 549          //作者：    中景园电子
 550          //日期：    2013-02-22
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 10  

 551          //功能：    显示一个字符串,包含中英文显示
 552          //输入参数：x,y :起点坐标
 553          //      fc:前置画笔颜色
 554          //      bc:背景颜色
 555          //      str :字符串  
 556          //      size:字体大小
 557          //      mode:模式 0,填充模式;1,叠加模式
 558          //返回值：  无
 559          //修改记录：无
 560          //******************************************************************               
 561          void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 562          {         
 563   1        u16 x0=x;                   
 564   1          u8 bHz=0;     //字符或者中文 
 565   1          while(*str!=0)//数据未结束
 566   1          { 
 567   2              if(!bHz)
 568   2              {
 569   3            if(x>(lcddev.width-size/2)||y>(lcddev.height-size)) 
 570   3            return; 
 571   3                if(*str>0x80)bHz=1;//中文 
 572   3                else              //字符
 573   3                {          
 574   4                  if(*str==0x0D)//换行符号
 575   4                  {         
 576   5                      y+=size;
 577   5                x=x0;
 578   5                      str++; 
 579   5                  }  
 580   4                  else
 581   4              {
 582   5                if(size>16)//字库中没有集成12X24 16X32的英文字体,用8X16代替
 583   5                {  
 584   6                LCD_ShowChar(x,y,fc,bc,*str,16,mode);
 585   6                x+=8; //字符,为全字的一半 
 586   6                }
 587   5                else
 588   5                {
 589   6                LCD_ShowChar(x,y,fc,bc,*str,size,mode);
 590   6                x+=size/2; //字符,为全字的一半 
 591   6                }
 592   5              } 
 593   4              str++; 
 594   4                  
 595   4                }
 596   3              }else//中文 
 597   2              {   
 598   3            if(x>(lcddev.width-size)||y>(lcddev.height-size)) 
 599   3            return;  
 600   3                  bHz=0;//有汉字库    
 601   3            if(size==32)
 602   3            GUI_DrawFont32(x,y,fc,bc,str,mode);   
 603   3            else if(size==24)
 604   3            GUI_DrawFont24(x,y,fc,bc,str,mode); 
 605   3            else
 606   3            GUI_DrawFont16(x,y,fc,bc,str,mode);
 607   3              
 608   3                str+=2; 
 609   3                x+=size;//下一个汉字偏移      
 610   3              }            
 611   2          }   
 612   1      }
C51 COMPILER V9.52.0.0   GUI                                                               04/17/2016 11:52:59 PAGE 11  

 613          
 614          //******************************************************************
 615          //函数名：  Gui_StrCenter
 616          //作者：    中景园电子
 617          //日期：    2013-02-22
 618          //功能：    居中显示一个字符串,包含中英文显示
 619          //输入参数：x,y :起点坐标
 620          //      fc:前置画笔颜色
 621          //      bc:背景颜色
 622          //      str :字符串  
 623          //      size:字体大小
 624          //      mode:模式 0,填充模式;1,叠加模式
 625          //返回值：  无
 626          //修改记录：无
 627          //******************************************************************   
 628          void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 629          {
 630   1        u16 len=strlen((const char *)str);
 631   1        u16 x1=(lcddev.width-len*8)/2;
 632   1        Show_Str(x+x1,y,fc,bc,str,size,mode);
 633   1      } 
 634           
 635          //******************************************************************
 636          //函数名：  Gui_Drawbmp16
 637          //作者：    中景园电子
 638          //日期：    2013-02-22
 639          //功能：    显示一副16位BMP图像
 640          //输入参数：x,y :起点坐标
 641          //      *p :图像数组起始地址
 642          //返回值：  无
 643          //修改记录：无
 644          //******************************************************************  
 645          void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p) //显示40*40 QQ图片
 646          {
 647   1          int i; 
 648   1        unsigned char picH,picL; 
 649   1        LCD_SetWindows(x,y,x+40-1,y+40-1);//窗口设置
 650   1          for(i=0;i<40*40;i++)
 651   1        { 
 652   2          picL=*(p+i*2);  //数据低位在前
 653   2          picH=*(p+i*2+1);        
 654   2          LCD_DrawPoint_16Bit(picH<<8|picL);              
 655   2        } 
 656   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//恢复显示窗口为全屏 
 657   1      
 658   1      }
 659          
 660          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5673    ----
   CONSTANT SIZE    =   5104    ----
   XDATA SIZE       =   ----     236
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
