C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) DEBUG OB
                    -JECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /**************************************************************************************
  24          //=======================================液晶屏数据线接线==========================================//
  25          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  26          #define  LCD_DataPortH P2 
  27          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  28          #define  LCD_DataPortL P0     
  29          //=======================================液晶屏控制线接线==========================================//
  30          CS=P1^3;    //片选  
  31          RS=P1^2;      //数据/命令切换
  32          WR=P1^1;    //写控制
  33          RD=P1^0;    //读控制
  34          RESET=P3^3;   //复位 
  35          **************************************************************************************************/ 
  36          //LCD的画笔颜色和背景色    
  37          u16 POINT_COLOR=0x0000; //画笔颜色
  38          u16 BACK_COLOR=0xFFFF;  //背景色 
  39          //管理LCD重要参数
  40          //默认为竖屏
  41          _lcd_dev lcddev;
  42          
  43          
  44          
  45          //******************************************************************
  46          //函数名：  LCD_Write_Bus
  47          //作者：    xiao冯@全动电子
  48          //日期：    2013-02-22
  49          //功能：    向液晶屏总线写入数据(LCD驱动内部函数)
  50          //输入参数：VH:高8位数据
  51          //          VL:低8位数据
  52          //返回值：  无
  53          //修改记录：无
  54          //******************************************************************
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 2   

  55          
  56          void LCD_Write_Bus(char VH,char VL)   
  57          {
  58   1        LCD_CS=0; 
  59   1        LCD_DataPortH=VH; 
  60   1        LCD_DataPortL=VL;   
  61   1        LCD_WR=0;
  62   1        LCD_WR=1; 
  63   1        LCD_CS=1;
  64   1      }
  65          
  66          
  67          
  68          //******************************************************************
  69          //函数名：  LCD_WR_DATA8
  70          //作者：    xiao冯@全动电子
  71          //日期：    2013-02-22
  72          //功能：    向液晶屏总线写入写8位数据
  73          //输入参数：VH:高8位数据
  74          //          VL:低8位数据
  75          //返回值：  无
  76          //修改记录：无
  77          //******************************************************************
  78          void LCD_WR_DATA8(char VH,char VL) 
  79          {
  80   1        LCD_RS=1;
  81   1        LCD_Write_Bus(VH,VL);
  82   1      } 
  83          
  84          //******************************************************************
  85          //函数名：  LCD_WR_REG
  86          //作者：    xiao冯@全动电子
  87          //日期：    2013-02-22
  88          //功能：    向液晶屏总线写入写16位指令
  89          //输入参数：Reg:待写入的指令值
  90          //返回值：  无
  91          //修改记录：无
  92          //******************************************************************
  93          void LCD_WR_REG(int Reg)   
  94          { 
  95   1        LCD_RS=0;
  96   1        LCD_Write_Bus(Reg>>8,Reg);
  97   1      } 
  98          
  99          //******************************************************************
 100          //函数名：  LCD_WR_DATA
 101          //作者：    xiao冯@全动电子
 102          //日期：    2013-02-22
 103          //功能：    向液晶屏总线写入写16位数据
 104          //输入参数：Data:待写入的数据
 105          //返回值：  无
 106          //修改记录：无
 107          //******************************************************************
 108           void LCD_WR_DATA(int Data)
 109          {
 110   1        LCD_RS=1;
 111   1        LCD_Write_Bus(Data>>8,Data);
 112   1      }
 113          
 114          //******************************************************************
 115          //函数名：  LCD_WriteReg
 116          //作者：    xiao冯@全动电子
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 3   

 117          //日期：    2013-02-22
 118          //功能：    写寄存器数据
 119          //输入参数：LCD_Reg:寄存器地址
 120          //      LCD_RegValue:要写入的数据
 121          //返回值：  无
 122          //修改记录：无
 123          //******************************************************************
 124          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 125          {
 126   1        LCD_WR_REG(LCD_Reg);
 127   1        LCD_WR_DATA(LCD_RegValue);
 128   1      }
 129          
 130          //******************************************************************
 131          //函数名：  LCD_WriteRAM_Prepare
 132          //作者：    xiao冯@全动电子
 133          //日期：    2013-02-22
 134          //功能：    开始写GRAM
 135          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 136          //输入参数：无
 137          //返回值：  无
 138          //修改记录：无
 139          //******************************************************************
 140          void LCD_WriteRAM_Prepare(void)
 141          {
 142   1        LCD_WR_REG(lcddev.wramcmd);   
 143   1      }
 144          
 145          
 146          //******************************************************************
 147          //函数名：  LCD_Clear
 148          //作者：    xiao冯@全动电子
 149          //日期：    2013-02-22
 150          //功能：    LCD全屏填充清屏函数
 151          //输入参数：Color:要清屏的填充色
 152          //返回值：  无
 153          //修改记录：无
 154          //******************************************************************
 155          void LCD_Clear(u16 Color)
 156          {
 157   1        u32 index=0;      
 158   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 159   1      #if LCD_USE8BIT_MODEL==1
                LCD_RS=1;//写数据 
                LCD_CS=0;    
                for(index=0;index<lcddev.width*lcddev.height;index++)
                {
                  LCD_DataPortL=(Color>>8); 
                  LCD_WR=0;
                  LCD_WR=1; 
                  
                  LCD_DataPortL=Color;  
                  LCD_WR=0;
                  LCD_WR=1;   
                }
                LCD_CS=1; 
              #else //16位模式
 174   1        for(index=0;index<lcddev.width*lcddev.height;index++)
 175   1        {
 176   2          LCD_WR_DATA(Color);     
 177   2        }
 178   1      #endif
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 4   

 179   1        
 180   1      } 
 181          
 182          //******************************************************************
 183          //函数名：  LCD_DrawPoint
 184          //作者：    xiao冯@全动电子
 185          //日期：    2013-02-22
 186          //功能：    在指定位置写入一个像素点数据
 187          //输入参数：(x,y):光标坐标
 188          //返回值：  无
 189          //修改记录：无
 190          //******************************************************************
 191          void LCD_DrawPoint(u16 x,u16 y)
 192          {
 193   1        LCD_SetCursor(x,y);//设置光标位置 
 194   1      #if LCD_USE8BIT_MODEL==1
                LCD_CS=0;
                LCD_RD=1;
                LCD_RS=1;//写地址    
                LCD_DataPortL=(POINT_COLOR>>8); 
                LCD_WR=0;
                LCD_WR=1;
                LCD_DataPortL=POINT_COLOR;  
                LCD_WR=0;
                LCD_WR=1;  
                LCD_CS=1;
              #else
 206   1        LCD_WR_DATA(POINT_COLOR); 
 207   1      #endif
 208   1      }  
 209          //******************************************************************
 210          //函数名：  LCD_DrawPoint_16Bit
 211          //作者：    xiao冯@全动电子
 212          //日期：    2013-02-22
 213          //功能：    8位总线下如何写入一个16位数据
 214          //输入参数：(x,y):光标坐标
 215          //返回值：  无
 216          //修改记录：无
 217          //******************************************************************
 218          void LCD_DrawPoint_16Bit(u16 color)
 219          {
 220   1      #if LCD_USE8BIT_MODEL==1
                LCD_CS=0;
                LCD_RD=1;
                LCD_RS=1;//写地址    
                LCD_DataPortL=(color>>8); 
                LCD_WR=0;
                LCD_WR=1;
                LCD_DataPortL=color;  
                LCD_WR=0;
                LCD_WR=1;  
                LCD_CS=1;
              #else
 232   1        LCD_WR_DATA(color); 
 233   1      #endif
 234   1      
 235   1      
 236   1      }
 237          //******************************************************************
 238          //函数名：  LCD_Reset
 239          //作者：    xiao冯@全动电子
 240          //日期：    2013-02-22
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 5   

 241          //功能：    LCD复位函数，液晶初始化前要调用此函数
 242          //输入参数：无
 243          //返回值：  无
 244          //修改记录：无
 245          //******************************************************************
 246          void LCD_Reset(void)
 247          {
 248   1        LCD_RESET=1;
 249   1        delay_ms(50); 
 250   1        LCD_RESET=0;
 251   1        delay_ms(50);
 252   1        LCD_RESET=1;
 253   1        delay_ms(50);
 254   1      }
 255          
 256          //******************************************************************
 257          //函数名：  LCD_Init
 258          //作者：    xiao冯@全动电子
 259          //日期：    2013-02-22
 260          //功能：    LCD初始化
 261          //输入参数：无
 262          //返回值：  无
 263          //修改记录：无
 264          //******************************************************************
 265          void LCD_Init(void)
 266          {
 267   1        LCD_Reset(); //初始化之前复位
 268   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 269   1      
 270   1        //ILI9486初始化
 271   1        LCD_WR_REG(0XF9);
 272   1        LCD_WR_DATA(0x00);
 273   1        LCD_WR_DATA(0x08);
 274   1        
 275   1        LCD_WR_REG(0xC0);
 276   1        LCD_WR_DATA(0x19);//VREG1OUT POSITIVE
 277   1        LCD_WR_DATA(0x1a);//VREG2OUT NEGATIVE
 278   1        
 279   1        LCD_WR_REG(0xC1);
 280   1        LCD_WR_DATA(0x45);//VGH,VGL    VGH>=14V.
 281   1        LCD_WR_DATA(0x00);
 282   1        
 283   1        LCD_WR_REG(0xC2);
 284   1        LCD_WR_DATA(0x33);
 285   1        
 286   1        LCD_WR_REG(0XC5);
 287   1        LCD_WR_DATA(0x00);
 288   1        LCD_WR_DATA(0x28);//VCM_REG[7:0]. <=0X80.
 289   1          
 290   1        LCD_WR_REG(0xB1);//OSC Freq set.
 291   1        LCD_WR_DATA(0x90);//0xA0=62HZ,0XB0 =70HZ, <=0XB0.
 292   1        LCD_WR_DATA(0x11);
 293   1        
 294   1        LCD_WR_REG(0xB4);
 295   1        LCD_WR_DATA(0x02); //2 DOT FRAME MODE,F<=70HZ.
 296   1        
 297   1        LCD_WR_REG(0xB6);
 298   1        LCD_WR_DATA(0x00);
 299   1        LCD_WR_DATA(0x42);//0 GS SS SM ISC[3:0];
 300   1        LCD_WR_DATA(0x3B);
 301   1          
 302   1        LCD_WR_REG(0xB7);
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 6   

 303   1        LCD_WR_DATA(0x07);
 304   1        
 305   1        LCD_WR_REG(0xE0);
 306   1        LCD_WR_DATA(0x1F);
 307   1        LCD_WR_DATA(0x25);
 308   1        LCD_WR_DATA(0x22);
 309   1        LCD_WR_DATA(0x0B);
 310   1        LCD_WR_DATA(0x06);
 311   1        LCD_WR_DATA(0x0A);
 312   1        LCD_WR_DATA(0x4E);
 313   1        LCD_WR_DATA(0xC6);
 314   1        LCD_WR_DATA(0x39);
 315   1        LCD_WR_DATA(0x00);
 316   1        LCD_WR_DATA(0x00);
 317   1        LCD_WR_DATA(0x00);
 318   1        LCD_WR_DATA(0x00);
 319   1        LCD_WR_DATA(0x00);
 320   1        LCD_WR_DATA(0x00);
 321   1        
 322   1        LCD_WR_REG(0XE1);
 323   1        LCD_WR_DATA(0x1F);
 324   1        LCD_WR_DATA(0x3F);
 325   1        LCD_WR_DATA(0x3F);
 326   1        LCD_WR_DATA(0x0F);
 327   1        LCD_WR_DATA(0x1F);
 328   1        LCD_WR_DATA(0x0F);
 329   1        LCD_WR_DATA(0x46);
 330   1        LCD_WR_DATA(0x49);
 331   1        LCD_WR_DATA(0x31);
 332   1        LCD_WR_DATA(0x05);
 333   1        LCD_WR_DATA(0x09);
 334   1        LCD_WR_DATA(0x03);
 335   1        LCD_WR_DATA(0x1C);
 336   1        LCD_WR_DATA(0x1A);
 337   1        LCD_WR_DATA(0x00);
 338   1        
 339   1        LCD_WR_REG(0XF1);
 340   1        LCD_WR_DATA(0x36);
 341   1        LCD_WR_DATA(0x04);
 342   1        LCD_WR_DATA(0x00);
 343   1        LCD_WR_DATA(0x3C);
 344   1        LCD_WR_DATA(0x0F);
 345   1        LCD_WR_DATA(0x0F);
 346   1        LCD_WR_DATA(0xA4);
 347   1        LCD_WR_DATA(0x02);
 348   1        
 349   1        LCD_WR_REG(0XF2);
 350   1        LCD_WR_DATA(0x18);
 351   1        LCD_WR_DATA(0xA3);
 352   1        LCD_WR_DATA(0x12);
 353   1        LCD_WR_DATA(0x02);
 354   1        LCD_WR_DATA(0x32);
 355   1        LCD_WR_DATA(0x12);
 356   1        LCD_WR_DATA(0xFF);
 357   1        LCD_WR_DATA(0x32);
 358   1        LCD_WR_DATA(0x00);
 359   1        
 360   1        LCD_WR_REG(0XF4);
 361   1        LCD_WR_DATA(0x40);
 362   1        LCD_WR_DATA(0x00);
 363   1        LCD_WR_DATA(0x08);
 364   1        LCD_WR_DATA(0x91);
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 7   

 365   1        LCD_WR_DATA(0x04);
 366   1        
 367   1        LCD_WR_REG(0XF8);
 368   1        LCD_WR_DATA(0x21);
 369   1        LCD_WR_DATA(0x04);
 370   1        
 371   1        LCD_WR_REG(0x36);
 372   1        LCD_WR_DATA(0x48);
 373   1        
 374   1        LCD_WR_REG(0x3A);
 375   1        LCD_WR_DATA(0x55);
 376   1        
 377   1        LCD_WR_REG(0x11);
 378   1        delay_ms(120);
 379   1        //LCD_WR_REG(0x21);
 380   1        LCD_WR_REG(0x29);
 381   1      
 382   1        //设置LCD属性参数
 383   1        LCD_SetParam();//设置LCD参数   
 384   1        LCD_BL=1;//点亮背光  
 385   1      }
 386          //******************************************************************
 387          //函数名：  LCD_SetWindows
 388          //作者：    xiao冯@全动电子
 389          //日期：    2013-02-22
 390          //功能：    设置显示窗口
 391          //输入参数：(xStar,yStar):窗口左上角起始坐标
 392          //        (xEnd,yEnd):窗口右下角结束坐标
 393          //返回值：  无
 394          //修改记录：无
 395          //******************************************************************
 396          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 397          { 
 398   1        LCD_WR_REG(lcddev.setxcmd); 
 399   1        LCD_WR_DATA(xStar>>8);
 400   1        LCD_WR_DATA(0x00FF&xStar);    
 401   1        LCD_WR_DATA(xEnd>>8);
 402   1        LCD_WR_DATA(0x00FF&xEnd);
 403   1      
 404   1        LCD_WR_REG(lcddev.setycmd); 
 405   1        LCD_WR_DATA(yStar>>8);
 406   1        LCD_WR_DATA(0x00FF&yStar);    
 407   1        LCD_WR_DATA(yEnd>>8);
 408   1        LCD_WR_DATA(0x00FF&yEnd);
 409   1      
 410   1        LCD_WriteRAM_Prepare(); //开始写入GRAM      
 411   1      }   
 412          
 413          //******************************************************************
 414          //函数名：  LCD_SetCursor
 415          //作者：    xiao冯@全动电子
 416          //日期：    2013-02-22
 417          //功能：    设置光标位置
 418          //输入参数：Xpos:横坐标
 419          //      Ypos:纵坐标
 420          //返回值：  无
 421          //修改记录：无
 422          //******************************************************************
 423          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 424          {               
 425   1        LCD_WR_REG(lcddev.setxcmd); 
 426   1        LCD_WR_DATA(Xpos>>8);
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 8   

 427   1        LCD_WR_DATA(0x00FF&Xpos);   
 428   1        LCD_WR_DATA((Xpos+1)>>8);
 429   1        LCD_WR_DATA((Xpos+1));
 430   1        
 431   1        LCD_WR_REG(lcddev.setycmd); 
 432   1        LCD_WR_DATA(Ypos>>8);
 433   1        LCD_WR_DATA(0x00FF&Ypos);   
 434   1        LCD_WR_DATA((Ypos+1)>>8);
 435   1        LCD_WR_DATA((Ypos+1));
 436   1        LCD_WriteRAM_Prepare(); //开始写入GRAM    
 437   1      } 
 438          
 439          //******************************************************************
 440          //函数名：  LCD_SetParam
 441          //作者：    xiao冯@全动电子
 442          //日期：    2013-02-22
 443          //功能：    设置LCD参数，方便进行横竖屏模式切换
 444          //输入参数：无
 445          //返回值：  无
 446          //修改记录：无
 447          //******************************************************************
 448          void LCD_SetParam(void)
 449          { 
 450   1        lcddev.setxcmd=0x2A;
 451   1        lcddev.setycmd=0x2B;
 452   1        lcddev.wramcmd=0x2C;
 453   1      #if USE_HORIZONTAL==1 //使用横屏    
 454   1        lcddev.dir=1;//横屏
 455   1        lcddev.width=480;
 456   1        lcddev.height=320;      
 457   1        LCD_WriteReg(0x36,(1<<3)|(1<<7)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 458   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=320;
                lcddev.height=480;  
                LCD_WriteReg(0x36,(1<<3)|(1<<6)|(1<<7));//BGR==1,MY==0,MX==0,MV==0
              #endif
 464   1      }   
 465          
 466          
 467          void LCD_direction(u8 direction )
 468          { 
 469   1        switch(direction){
 470   2          case 3:
 471   2            lcddev.width=480;
 472   2            lcddev.height=320;
 473   2            LCD_WriteReg(0x36,(1<<3)|(1<<7)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 474   2          break;
 475   2          case 1:
 476   2            lcddev.width=480;
 477   2            lcddev.height=320;
 478   2            LCD_WriteReg(0x36,(1<<3)|(0<<7)|(1<<6)|(1<<5));//BGR==1,MY==1,MX==0,MV==1
 479   2          break;
 480   2          case 2:                 
 481   2            lcddev.width=320;
 482   2            lcddev.height=480;  
 483   2            LCD_WriteReg(0x36,(1<<3)|(1<<6)|(1<<7));//BGR==1,MY==0,MX==0,MV==0
 484   2          break;
 485   2          case 0:                 
 486   2            lcddev.width=320;
 487   2            lcddev.height=480;  
 488   2            LCD_WriteReg(0x36,(1<<3)|(0<<6)|(0<<7));//BGR==1,MY==0,MX==0,MV==0
C51 COMPILER V9.56.0.0   LCD                                                               12/29/2017 20:09:51 PAGE 9   

 489   2          break;
 490   2          default:break;
 491   2        }
 492   1          
 493   1      
 494   1      }   
 495          
 496          
 497          
 498          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1060    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
